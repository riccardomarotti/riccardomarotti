<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Riccardo Marotti</title><link href="http://blog.riccardomarotti.com/" rel="alternate"></link><link href="http://blog.riccardomarotti.com/feeds/tips.atom.xml" rel="self"></link><id>http://blog.riccardomarotti.com/</id><updated>2012-06-14T22:43:00+02:00</updated><entry><title>Tip: cancellazione “bulk” dalla libreria di Kindle</title><link href="http://blog.riccardomarotti.com/post/25110964828/tip-cancellazione-bulk-dalla-libreria-di-kindle/" rel="alternate"></link><updated>2012-06-14T22:43:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2012-06-14:post/25110964828/tip-cancellazione-bulk-dalla-libreria-di-kindle/</id><summary type="html">&lt;p&gt;L'interfaccia della &lt;a href="http://www.amazon.it/gp/digital/fiona/manage"&gt;libreria di Kindle&lt;/a&gt; permette di cancellare soltanto un documento per volta.
Questo rende, di fatto, impossibile la cancellazione di più di 50 elementi.&lt;/p&gt;
&lt;p&gt;Per ovviare a questa limitazione è possibile utilizzare questo &lt;em&gt;hack&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Anzitutto, filtrare i documenti in modo che siano visualizzati soltanto quelli che si vogliono cancellare (nel mio caso erano tutti gli articoli inviati da &lt;a href="http://www.instapaper.com/"&gt;Instapaper&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;img alt="KindleList" src="/images/kindle.png" /&gt;&lt;/p&gt;
&lt;p&gt;Poi aprire la console di Javascript ed eseguire questo codice:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[name=&amp;quot;contentName&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;Fion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;deleteItem_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;
Verranno cancellati &lt;strong&gt;tutti gli elementi correntemente visualizzati&lt;/strong&gt;.
&lt;hr/&gt;&lt;/p&gt;</summary><category term="Kindle"></category></entry><entry><title>Aprire la console nella directory corrente del Finder (Lion)</title><link href="http://blog.riccardomarotti.com/post/11940733826/tip-aprire-la-console-nella-directory-corrente-del/" rel="alternate"></link><updated>2011-10-26T07:30:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2011-10-26:post/11940733826/tip-aprire-la-console-nella-directory-corrente-del/</id><summary type="html">&lt;p&gt;Mi capita spesso, mentre uso il Finder, di dover aprire un terminale dal punto in cui sono. A questo scopo, avevo sempre utilizzato uno script di automator, ma ho scoperto che, in Lion, esiste il servizio “New Terminal at Folder” (non so come sia in italiano).&lt;/p&gt;
&lt;p&gt;Per abilitarlo, basta aprire &lt;code&gt;System Preferences &amp;gt; Keyboard &amp;gt; Keyboard Shortcuts &amp;gt; Services&lt;/code&gt;, fare doppio click a fianco di “New Terminal at Folder” per inserire lo shortcut con cui si desidera aprire il terminale, e selezionare la checkbox corrispondente:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="/images/new_terminal_at_folder.png" /&gt;&lt;/p&gt;
&lt;p&gt;In questo modo, si potrà accedere alla funzionalità tramite &lt;code&gt;click destro &amp;gt; Services &amp;gt; New Terminal at Folder&lt;/code&gt;, oppure tramite lo shortcut inserito.&lt;/p&gt;</summary><category term="Lion"></category></entry><entry><title>Tip - password manager minimale</title><link href="http://blog.riccardomarotti.com/post/11898574381/tip-password-manager-minimale/" rel="alternate"></link><updated>2011-10-25T00:00:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2011-10-25:post/11898574381/tip-password-manager-minimale/</id><summary type="html">&lt;p&gt;Dopo aver letto &lt;a href="http://www.theatlantic.com/magazine/archive/2011/10/hacked/8673/"&gt;questo&lt;/a&gt; articolo, il mio desiderio di avere password complesse è aumentato. Tale desiderio, però, non va d’accordo con la mia incapacità mnemonica.&lt;/p&gt;
&lt;p&gt;Allora ho pensato a un &lt;a href="http://en.wikipedia.org/wiki/Password_manager"&gt;password manager&lt;/a&gt;, ma sono tutti troppo complessi (e in certi casi costosi). A me serve solo un software che:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;mi generi delle password&lt;/li&gt;
&lt;li&gt;me le salvi in modo sicuro, proteggendole con una password (l’unica che dovrò ricordare)&lt;/li&gt;
&lt;li&gt;mi permetta di copiare negli appunti una password salvata&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Spendere 50 euro per questo mi sembrava eccessivo (&lt;a href="http://keepass.info/"&gt;keepass&lt;/a&gt; è gratuito, ma su Mac serve Mono…).&lt;/p&gt;
&lt;p&gt;Per cui, dopo qualche ricerca, il nerd che è in me ha prodotto questo script, che va aggiunto al proprio &lt;code&gt;~/.bash_profile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;PWD_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/Dropbox/passwords
&lt;span class="nv"&gt;DEFAULT_PWD_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password

&lt;span class="k"&gt;function&lt;/span&gt; genpwd&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    head /dev/urandom &lt;span class="p"&gt;|&lt;/span&gt; uuencode -m - &lt;span class="p"&gt;|&lt;/span&gt; sed -n 2p &lt;span class="p"&gt;|&lt;/span&gt; head -c &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;15&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="p"&gt;|&lt;/span&gt; gpg -c --force-mdc &amp;gt; &lt;span class="nv"&gt;$PWD_DIR&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;$DEFAULT_PWD_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.gpg&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; getpwd&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    gpg -d &lt;span class="nv"&gt;$PWD_DIR&lt;/span&gt;/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DEFAULT_PWD_FILE&lt;/span&gt;&lt;span class="si"&gt;}}&lt;/span&gt;.gpg &lt;span class="p"&gt;|&lt;/span&gt; pbcopy
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In sostanza vengono creati due comandi: &lt;code&gt;genpwd&lt;/code&gt;, che genera una password, la critta con &lt;a href="http://www.gnupg.org/"&gt;gpg&lt;/a&gt;, e la salva. E &lt;code&gt;getpwd&lt;/code&gt;, che permette di copiarla negli appunti.&lt;/p&gt;
&lt;p&gt;Per esempio&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; genpwd google 20
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;crea una password di 20 caratteri e la salva, crittata, nel file &lt;code&gt;google.gpg&lt;/code&gt;, contenuto nella directory &lt;code&gt;~/Dropbox/passwords&lt;/code&gt; (per cambiare la directory, basta modificare la variabile PWD_DIR).&lt;/p&gt;
&lt;p&gt;Se non si passano parametri, viene generata una password di 15 caratteri (lunghezza di default) e viene salvata nel file &lt;code&gt;password.gpg&lt;/code&gt; (che è il nome di default).&lt;/p&gt;
&lt;p&gt;Per ottenere la password salvata&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; getpwd google
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;decritta il file &lt;code&gt;google.gpg&lt;/code&gt; e copia il suo contenuto (cioè la password) negli appunti.&lt;/p&gt;
&lt;p&gt;Volendo si può svuotare la clipboard con&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; pbcopy &amp;lt; /dev/null
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Robe da nerd"></category></entry><entry><title>Accedere alle risorse del bundle nei test</title><link href="http://blog.riccardomarotti.com/post/11855069147/tip-accedere-alle-risorse-del-bundle-nei-test/" rel="alternate"></link><updated>2011-10-24T00:00:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2011-10-24:post/11855069147/tip-accedere-alle-risorse-del-bundle-nei-test/</id><summary type="html">&lt;p&gt;Per accedere ai file contenuti nel bundle di un’applicazione iOS, in genere si usa una cosa del tipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="bp"&gt;NSBundle&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSBundle&lt;/span&gt; &lt;span class="n"&gt;mainBundle&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Purtroppo, nei test, se si prova a usare il mainBundle per ottenere il path di una risorsa,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt; &lt;span class="nl"&gt;pathForResource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;aResource&amp;quot;&lt;/span&gt;  &lt;span class="nl"&gt;ofType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;aType&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;si ottiene un bel &lt;code&gt;NULL&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Penso che questo succeda perché il mainBundle è il bundle associato alla directory dell’applicazione correntemente in esecuzione, che non è la nostra applicazione, ma il tester.&lt;/p&gt;
&lt;p&gt;Per ovviare a questo problema, si può usare&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="bp"&gt;NSBundle&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSBundle&lt;/span&gt;  &lt;span class="nl"&gt;bundleForClass&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;MyTestedClass&lt;/span&gt;  &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;che restituisce il bundle associato alla directory che contiene la classe passata.&lt;/p&gt;
&lt;p&gt;Passando la classe testata, si otterrà il bundle associato alla directory che contiene tutte le risorse usate nel test.&lt;/p&gt;</summary><category term="Objective C"></category></entry><entry><title>Code Sign error: Provisioning profile ‘XXX’ can’t be found</title><link href="http://blog.riccardomarotti.com/post/5393177862/code-sign-error-provisioning-profile-xxx-cant-be/" rel="alternate"></link><updated>2011-05-11T00:00:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2011-05-11:post/5393177862/code-sign-error-provisioning-profile-xxx-cant-be/</id><summary type="html">&lt;p&gt;Se si aggiorna un Provisioning Profile, per esempio, di una distribuzione ad hoc di un’applicazione iOS, può succedere che, tentando di compilare, si incappi in questo errore:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Code Sign error: Provisioning profile 'XXX' can’t be found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Questo succede perché, se il nome del profilo resta lo stesso, XCode non aggiornerà con il nuovo ID il riferimento al profilo di provisioning all’interno del progetto, ma manterrà quello vecchio, che non esiste più.&lt;/p&gt;
&lt;p&gt;L’unico modo che ho trovato per risolvere questo problema è stato di editare “a mano” il file project.pbxproj che sta all’interno del bundle del progetto (file &lt;code&gt;.xcodeproj&lt;/code&gt;). A questo punto, si devono sostituire tutte le occorrenze dell’ID presente nell’errore (quello che ho qui indicato con &lt;code&gt;XXX&lt;/code&gt;) con l’ID che del nuovo profilo. Nel mio caso c’erano due righe simili a queste:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PROVISIONING_PROFILE = “5EB9AFBEB-8D98-46F1-788C-482712DA5BA4”;&lt;/code&gt;
&lt;code&gt;“PROVISIONING_PROFILE[sdk=iphoneos*]” = “5E9AFBEB-8D98-46F1-788C-482712DA5BA4”&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Per trovare il nuovo ID basta aprire l’Organizer, selezionare &lt;code&gt;Library/Provisioning Profiles&lt;/code&gt; e selezionare il profilo. Nel riepilogo sarà presente il profile identifier.&lt;/p&gt;</summary><category term="XCode"></category></entry><entry><title>Tailcall optimization in Ruby</title><link href="http://blog.riccardomarotti.com/post/4923406088/tailcall-optimization-in-ruby/" rel="alternate"></link><updated>2011-04-25T00:00:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2011-04-25:post/4923406088/tailcall-optimization-in-ruby/</id><summary type="html">&lt;p&gt;Il &lt;a href="/post/4871880142/implementare-i-while-senza-usare-keywords/#comment-190803796"&gt;commento&lt;/a&gt; di Alessandro al mio &lt;a href="/post/4871880142/implementare-i-while-senza-usare-keywords/"&gt;post precedente&lt;/a&gt; ha evidenziato che, con l’approccio descritto, non si potrebbe fare una cosa del tipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="nb"&gt;proc&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;while_true&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
     &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Stack overflow?&amp;quot;&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;perché lo stack si riempirebbe dopo poco.&lt;/p&gt;
&lt;p&gt;La soluzione a questo problema è l’implementazione della &lt;a href="http://en.wikipedia.org/wiki/Tail_call_optimization"&gt;Tailcall Optimization&lt;/a&gt; (TCO). In parole povere si tratta, quando possibile, di rendere iterative le chiamate ricorsive.
In teoria, dalla versione 1.9 di Ruby, è possibile abilitare la TCO, ma, o ho sbagliato qualcosa, oppure non funziona come dovrebbe, perché, anche abilitandola, lo stack va in overflow con la ricorsione.&lt;/p&gt;
&lt;p&gt;Alla fine ho trovato &lt;a href="http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/145593"&gt;questa discussione&lt;/a&gt;, da cui ho ricavato questo pezzo di codice, dove si sfrutta il meccanismo di &lt;em&gt;catch/throw&lt;/em&gt; &lt;sup id="fnref:nota"&gt;&lt;a class="footnote-ref" href="#fn:nota" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; e un po’ di metaprogrammazione:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Class&lt;/span&gt;
   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tailcall_optimize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;org&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;instance_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;define_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;meth&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
         &lt;span class="kp"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:recurse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="k"&gt;else&lt;/span&gt;
         &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;meth&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
           &lt;span class="kp"&gt;loop&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
             &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:recurse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
               &lt;span class="kp"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;meth&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
             &lt;span class="k"&gt;end&lt;/span&gt;
           &lt;span class="k"&gt;end&lt;/span&gt;
         &lt;span class="k"&gt;end&lt;/span&gt;
         &lt;span class="no"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;meth&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
         &lt;span class="n"&gt;result&lt;/span&gt;
       &lt;span class="k"&gt;end&lt;/span&gt;
     &lt;span class="k"&gt;end&lt;/span&gt;
   &lt;span class="k"&gt;end&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Il metodo &lt;code&gt;tailcall_optimize&lt;/code&gt; altera il metodo passato, eliminando la ricorsione. Quindi, se si aggiunge:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Proc&lt;/span&gt;
     &lt;span class="n"&gt;tailcall_optimize&lt;/span&gt; &lt;span class="ss"&gt;:while_true&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;la ricorsione può continuare all’infinito.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:nota"&gt;
&lt;p&gt;l’interprete Ruby, ad ogni chiamata a &lt;code&gt;throw&lt;/code&gt;, cerca nello stack il blocco corrispondente (cioè che ha la stessa label del throw), svuota lo stack fino a quel punto e continua l’esecuzione da lì.&amp;#160;&lt;a class="footnote-backref" href="#fnref:nota" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Ruby"></category></entry><entry><title>Tip - Includere un framework in un progetto XCode</title><link href="http://blog.riccardomarotti.com/post/1096272870/framework-tip/" rel="alternate"></link><updated>2010-09-10T00:00:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2010-09-10:post/1096272870/framework-tip/</id><summary type="html">&lt;p&gt;Quando si include un framework esterno in un progetto XCode, per esempio, GData, anche se compila tutto, può succedere che, una volta eseguita l’applicazione, ci sia un crash con un errore del tipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;dyld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;loaded&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;loader_path&lt;/span&gt;&lt;span class="sr"&gt;/../Frameworks/GData.framework/&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="err"&gt;…&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Referenced&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;dell&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;eseguibile&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Questo succede perché l’eseguibile, linkato dinamicamente con il framework, non trova la libreria a runtime. Infatti la directory Frameworks non esiste all’interno del bundle dell’eseguibile.&lt;/p&gt;
&lt;p&gt;Per creare la directory e copiare al suo interno la libreria, basta aggiungere un “Copy Files Build Phase” (Click destro sul target, poi &lt;code&gt;Add -&amp;gt; New Build Phase -&amp;gt; New Copy Files Build Phase&lt;/code&gt;):&lt;/p&gt;
&lt;p&gt;&lt;img alt="ima1" src="/images/framework-tip-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;e assicurarsi di selezionare Frameworks come Destination&lt;/p&gt;
&lt;p&gt;&lt;img alt="ima2" src="/images/framework-tip-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Ora basta draggare il framework nel passo appena creato&lt;/p&gt;
&lt;p&gt;&lt;img alt="ima3" src="/images/framework-tip-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;In questo modo, la libreria sarà copiata opportunamente, e non ci saranno sorprese a runtime.&lt;/p&gt;</summary><category term="XCode"></category></entry><entry><title>Punti di vista</title><link href="http://blog.riccardomarotti.com/post/1080258933/punti-di-vista/" rel="alternate"></link><updated>2010-09-07T00:00:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2010-09-07:post/1080258933/punti-di-vista/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Follia è fare sempre la stessa cosa e aspettarsi risultati diversi.&lt;/p&gt;
&lt;p&gt;Albert Einstein&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ho sempre avuto difficoltà insormontabili nel versare il latte, o i succhi di frutta, con contenitori di questo tipo, quando sono ancora pieni:&lt;/p&gt;
&lt;p&gt;&lt;img alt="latte" src="/images/punti-di-vista-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Il latte tende a gorgogliare e raramente l’unico obiettivo raggiunto è la tazza.&lt;/p&gt;
&lt;p&gt;&lt;img alt="latte_gorgoglia" src="/images/punti-di-vista-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Ho cercato, per anni, di capire come si possa evitare il suddetto problema, provando a versare lentamente, velocemente, premendo il cartone, stando attento a non premerlo, e così via… Ho sempre pensato che chi costruisce questi aggeggi dovrebbe cambiare mestiere…&lt;/p&gt;
&lt;p&gt;Poi qualcuno mi ha detto: “basta versarlo al contrario”. Ho provato e  non ho versato una goccia dove non dovevo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="latte_funziona" src="/images/punti-di-vista-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Spesso, più spesso di quanto si creda, la soluzione a un problema è semplicissima e sta sotto i propri occhi, ma ci si fissa su un approccio, continuando a sbagliare all’infinito; magari, dando anche la colpa agli altri dei propri fallimenti.&lt;/p&gt;
&lt;p&gt;A volte, basta solo saper cercare la prospettiva giusta, e tutto diventa semplice.&lt;/p&gt;</summary><category term="Spunti di riflessione"></category></entry><entry><title>Come rimuovere un’applicazione dal dock</title><link href="http://blog.riccardomarotti.com/post/565367936/no-dock-application/" rel="alternate"></link><updated>2010-05-02T13:04:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2010-05-02:post/565367936/no-dock-application/</id><summary type="html">&lt;iframe width="500" height="281" src="http://www.youtube.com/embed/591xWdi-suA?wmode=transparent&amp;autohide=1&amp;egm=0&amp;hd=1&amp;iv_load_policy=3&amp;modestbranding=1&amp;rel=0&amp;showinfo=0&amp;showsearch=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Spike&lt;/strong&gt;: come rimuovere un’applicazione dal dock e aggiungere alla barra di stato un’icona per l’applicazione, con relativo menu.&lt;/p&gt;
&lt;p&gt;Questo video mostra i risultati del primo spike che ho fatto riguardo l’&lt;a href="/post/560768127/dropbox-sui-google-docs/"&gt;applicazione&lt;/a&gt; simil Dropbox che sto sviluppando.&lt;/p&gt;
&lt;p&gt;Per rimuovere l’icona dal dock, è sufficiente impostare a &lt;code&gt;True&lt;/code&gt; la property &lt;code&gt;Applicaion is Agent&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Per aggiungere un'icona alla status bar, con relativo menu, bisogna configurare a run-time, per esempio nel metodo &lt;code&gt;awakeFromNib&lt;/code&gt; dell’application delegate&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, lo status item dell’applciazione:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;statusItem&lt;/span&gt; &lt;span class="nl"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;applicationMenu&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;statusItem&lt;/span&gt; &lt;span class="nl"&gt;setImage&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;NSImage&lt;/span&gt; &lt;span class="nl"&gt;imageNamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nell’esempio ho usato l’icona di Dropbox:&lt;/p&gt;
&lt;p&gt;La musica è dei Blue Wave Theory, ed è reperibile su magnatune.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Quando si lancia l'applicazione, viene costruito il grafo degli oggetti codificati nel file &lt;code&gt;.xib&lt;/code&gt; e vengono creati gli oggetti corrispondenti con le relative connessioni. Alla fine, prima di visualizzare l'applicazione, viene inviato il messaggio &lt;code&gt;awakeFromNib&lt;/code&gt; a tutti gli oggetti che rispondono a tale messaggio.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Video"></category><category term="Xcode"></category><category term="Objective C"></category></entry><entry><title>Come rimuovere il DRM dai PDF che hai comprato</title><link href="http://blog.riccardomarotti.com/post/522788392/come-rimuovere-il-drm-dai-pdf-che-hai-comprato/" rel="alternate"></link><updated>2010-04-15T00:00:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2010-04-15:post/522788392/come-rimuovere-il-drm-dai-pdf-che-hai-comprato/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt; (Nov 2012): &lt;a href="http://lifehacker.com/5954466/how-do-i-get-rid-of-the-drm-on-my-ebooks-and-video"&gt;questo articolo&lt;/a&gt; spiega come rimuovere le protezioni utilizzando &lt;a href="http://calibre-ebook.com"&gt;calibre&lt;/a&gt;, in modo più semplice rispetto a quanto spiegato in questo post.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ieri ho comprato un ebook su &lt;a href="http://www.bookdepository.co.uk/"&gt;Book Depository&lt;/a&gt;. Visto che come formato indicava PDF, supponevo di poterlo leggere col vecchio caro &lt;a href="http://en.wikipedia.org/wiki/Preview_(software)"&gt;Preview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Invece, &lt;strong&gt;solo dopo averlo pagato&lt;/strong&gt;, al momento del download, vengo informato di due cose sconcertanti:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in quanto DRM munito, per leggere quel pdf serve Adobe Digital Editions (software notoriamente raccapricciante)&lt;/li&gt;
&lt;li&gt;posso scaricarlo al massimo 3 volte&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A questo punto, dopo una &lt;a href="http://www.gametrailers.com/user-movie/homer-simpson-angry/89292"&gt;breve incazzatura galattica&lt;/a&gt; (il libro l’ho pagato 30 euro), decido che l’unica soluzione razionale è rimuovere il DRM dal pdf.&lt;/p&gt;
&lt;p&gt;La cosa, in realtà, è di una semplicità eclatante, a dimostrazione di quanto sia utile e fondamentale il DRM&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Ho trovato &lt;a href="http://imaddicted.ca/ebooks/using-inept-to-strip-drm/"&gt;questo&lt;/a&gt; articolo, che spiega come fare, solo che non funzionava: “error decrypting book session key”. Allora ho indagato ancora po’ e ho scoperto che bastava una versione più aggiornata degli script che suggeriva di usare.&lt;/p&gt;
&lt;p&gt;In sostanza, per poter decrittare i pdf, servono:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strike&gt;Windows :( (purtroppo gli script richiedono windll…) &lt;/strike&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.python.it/download/"&gt;Python&lt;/a&gt; installato&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.voidspace.org.uk/python/modules.shtml#pycrypto"&gt;Pycrypto&lt;/a&gt; installato&lt;/li&gt;
&lt;li&gt;Questi due script: &lt;a href="http://pastebin.com/sQSNwN8B"&gt;ineptpdf.pyw&lt;/a&gt;, &lt;a href="http://pastebin.com/HbHbebqY"&gt;ineptkey.pyw&lt;/a&gt; (&lt;a href="http://pastebin.com/f1182324a"&gt;ineptkeymac.py&lt;/a&gt; su Mac) &lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Un’installazione di Adobe Digital Editions con registrato l’utente con cui si è scaricato il pdf&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A questo punto, dopo aver messo gli script e il pdf in una qualunque directory (per esempio c:\pdf), si esegue, da una command line in quella directory, ineptkey.pyw per ottenere la chiave dell’utente.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" src="/images/drm-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Poi si esegue &lt;code&gt;ineptpdf.pyw&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2" src="/images/drm-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;inserendo il file contenente la chiave, il pdf protetto e il nome del file di output:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image3" src="/images/drm-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Premere Decrypt.&lt;/p&gt;
&lt;p&gt;Fatto.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Su &lt;a href="http://pragprog.com/"&gt;questo&lt;/a&gt; sito vendono libri tecnici senza DRM. Sono certo che loro non hanno problemi economici dovuti a questa assenza.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Grazie a Lance che ha suggerito l’utilizzo di questo script su Mac, sotto nei commenti.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary></entry></feed>