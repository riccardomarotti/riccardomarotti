<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Riccardo Marotti</title><link href="http://blog.riccardomarotti.com/" rel="alternate"></link><link href="http://blog.riccardomarotti.com/feeds/tdd.atom.xml" rel="self"></link><id>http://blog.riccardomarotti.com/</id><updated>2010-04-25T00:00:00+02:00</updated><entry><title>TDD con Xcode</title><link href="http://blog.riccardomarotti.com/post/547615337/screencast-tdd-xcode/" rel="alternate"></link><updated>2010-04-25T00:00:00+02:00</updated><author><name>Riccardo Marotti</name></author><id>tag:blog.riccardomarotti.com,2010-04-25:post/547615337/screencast-tdd-xcode/</id><summary type="html">&lt;iframe width="500" height="281" src="http://www.youtube.com/embed/TdnbaNV3CJ8?wmode=transparent&amp;autohide=1&amp;egm=0&amp;hd=1&amp;iv_load_policy=3&amp;modestbranding=1&amp;rel=0&amp;showinfo=0&amp;showsearch=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Questo screencast è una breve introduzione su come si possa lavorare in TDD con Xcode.&lt;/p&gt;
&lt;p&gt;L’applicazione di cui si parla è un matcher, analogo a quello di cui ho parlato nel &lt;a href="/post/540519014/asserzioni-in-objective-c/"&gt;precedente&lt;/a&gt; post, che ha una classe &lt;code&gt;Verify&lt;/code&gt;, con una serie di metodi statici per confrontare oggetti.&lt;/p&gt;
&lt;p&gt;Nel video viene implementato il metodo &lt;code&gt;that:isEqualTo:&lt;/code&gt;, che non fa nulla se gli oggetti passati sono uguali, e genera un’eccezione se sono diversi.&lt;/p&gt;
&lt;p&gt;La musica di sottofondo è eseguita da Daniel Estrem e la puoi trovare &lt;a href="http://magnatune.com/artists/albums/estrem-bachvol1/"&gt;qui&lt;/a&gt;.&lt;/p&gt;</summary><category term="Test driven development"></category><category term="TDD"></category><category term="Robe da nerd"></category><category term="Agile"></category><category term="Objective C"></category><category term="Xcode"></category></entry></feed>